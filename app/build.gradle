plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.numan.videoeditor"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // debugImplementation because LeakCanary should only run in debug builds.
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'




    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Annotation processor
//    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    /*
    * Save state handling
    * */
    def save_instance_version = "1.1.0-beta01"
    implementation "androidx.savedstate:savedstate-ktx:$save_instance_version"

    /*
    * Navigation Components
    * */
    def navigation_components = "2.3.2"
    implementation "androidx.navigation:navigation-runtime-ktx:$navigation_components"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_components"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_components"

    /*
    * Room
    * */
    def room_db = "2.2.5"
    implementation "androidx.room:room-ktx:$room_db"
    kapt "android.arch.persistence.room:compiler:$room_db"
    kapt "androidx.room:room-compiler:$room_db"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.7.2"

    /*
    * Coroutines
    * */
    def coroutines_version = "1.3.9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'


    /* kotlin extensions */
    def ktx_version = "1.3.2"
    implementation "androidx.core:core-ktx:$ktx_version"

    /* kotlin extensions */
    def fragments_version = "1.2.5"
    implementation "androidx.fragment:fragment-ktx:$fragments_version"

    /* View Pager 2 */
    def view_pager_2_version = ""
    implementation "androidx.viewpager2:viewpager2:$view_pager_2_version"

    /* Data Store */
    def dataStore_version = "1.0.0-alpha05"
    implementation "androidx.datastore:datastore-preferences:$dataStore_version"


    // Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'jp.wasabeef:glide-transformations:3.3.0'
    implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'

    // Circular ImageView
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    // Dagger Core
    implementation "com.google.dagger:dagger:2.28"
    kapt "com.google.dagger:dagger-compiler:2.28"

    // Dagger Android
    api 'com.google.dagger:dagger-android:2.23.2'
    api 'com.google.dagger:dagger-android-support:2.23.2'
    kapt 'com.google.dagger:dagger-android-processor:2.23.2'

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"

    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02"
    kapt "androidx.hilt:hilt-compiler:1.0.0-alpha02"

    // Easy Permissions
    implementation 'pub.devrel:easypermissions:3.0.0'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // tasty toast
    implementation 'com.sdsmdg.tastytoast:tastytoast:0.1.1'

    // Banner View Pager
    implementation 'com.github.zhpanvip:BannerViewPager:3.2.0'

    implementation 'com.writingminds:FFmpegAndroid:0.3.2'

    implementation 'com.intuit.ssp:ssp-android:1.0.6'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
}